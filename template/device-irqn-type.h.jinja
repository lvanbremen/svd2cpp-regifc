
// SPDX-License-Identifier: MPL-2.0

#ifndef {{device.name.lower()}}_irqn_type_h
#define {{device.name.lower()}}_irqn_type_h

#include <cstdint>

#define NUMBER_OF_INT_VECTORS {{interrupts[-1].value + 16}}

enum class EIRQn_Type : std::int32_t
{
/******  Cortex-M Processor Exceptions Numbers *****************************************************************/
    NonMaskableInt_IRQn   = -14,    /*!< 2 Non Maskable Interrupt                                              */
    HardFault_IRQn        = -13,    /*!< 3 Cortex-M Hard Fault Interrupt                                       */
    MemoryManagement_IRQn = -12,    /*!< 4 Cortex-M Memory Management Interrupt                                */
    BusFault_IRQn         = -11,    /*!< 5 Cortex-M Bus Fault Interrupt                                        */
    UsageFault_IRQn       = -10,    /*!< 6 Cortex-M Usage Fault Interrupt                                      */
    SVCall_IRQn           = -5,     /*!< 11 Cortex-M SV Call Interrupt                                         */
    DebugMonitor_IRQn     = -4,     /*!< 12 Cortex-M Debug Monitor Interrupt                                   */
    PendSV_IRQn           = -2,     /*!< 14 Cortex-M Pend SV Interrupt                                         */
    SysTick_IRQn          = -1,     /*!< 15 Cortex-M System Tick Interrupt                                     */
/******  Processor specific Interrupt Numbers ******************************************************************/
{% set characters = interrupts | map(attribute="name") | map("length") | max %}
{% set digits = interrupts | map(attribute="value") | max | string | length %}
{% for interrupt in interrupts %}
    {{"%-*s"|format(characters + 5, interrupt.name + '_IRQn')}} = {{"%-*s"|format(digits + 1, interrupt.value|string + ',')}} // {{interrupt.description}}
{% endfor %}
};

#endif // {{device.name.lower()}}_irqn_type_h
